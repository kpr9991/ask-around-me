{"remainingRequest":"C:\\Users\\kprut\\Desktop\\ask-around-me\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\kprut\\Desktop\\ask-around-me\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\Users\\kprut\\Desktop\\ask-around-me\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\kprut\\Desktop\\ask-around-me\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\kprut\\Desktop\\ask-around-me\\frontend\\src\\components\\Question.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\kprut\\Desktop\\ask-around-me\\frontend\\src\\components\\Question.vue","mtime":1607093321478},{"path":"C:\\Users\\kprut\\Desktop\\ask-around-me\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\kprut\\Desktop\\ask-around-me\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\kprut\\Desktop\\ask-around-me\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\kprut\\Desktop\\ask-around-me\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\kprut\\Desktop\\ask-around-me\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQzpcXFVzZXJzXFxrcHJ1dFxcRGVza3RvcFxcYXNrLWFyb3VuZC1tZVxcZnJvbnRlbmRcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICJDOlxcVXNlcnNcXGtwcnV0XFxEZXNrdG9wXFxhc2stYXJvdW5kLW1lXFxmcm9udGVuZFxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAndnVleCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiSG9tZVZpZXciLAogIHByb3BzOiBbJ3F1ZXN0aW9uJ10sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRpYWxvZzogZmFsc2UsCiAgICAgIG1hcERpYWxvZzogZmFsc2UsCiAgICAgIG1hcmtlcnM6IFtdLAogICAgICBzdGFyUmF0aW5nOiAwLAogICAgICBzYXZpbmc6IGZhbHNlLAogICAgICBjdXJyZW50UXVlc3Rpb246IHsKICAgICAgICBsYXRpdHVkZTogNDAuNzM1ODIzNSwKICAgICAgICBsb25naXR1ZGU6IC03My45OTI3MTAyCiAgICAgIH0KICAgIH07CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZCh7fSwgbWFwU3RhdGUoewogICAgcG9zaXRpb246IGZ1bmN0aW9uIHBvc2l0aW9uKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5wb3NpdGlvbjsKICAgIH0KICB9KSksCiAgbWV0aG9kczogewogICAgb3BlbkRpYWxvZzogZnVuY3Rpb24gb3BlbkRpYWxvZyhxdWVzdGlvbikgewogICAgICBjb25zb2xlLmxvZyhxdWVzdGlvbik7CiAgICAgIHRoaXMuY3VycmVudFF1ZXN0aW9uID0gcXVlc3Rpb247CiAgICAgIHRoaXMuc3RhclJhdGluZyA9IDA7IC8vIHJlc2V0IHJhdGluZwoKICAgICAgdGhpcy5kaWFsb2cgPSB0cnVlOwogICAgfSwKICAgIG9wZW5NYXBEaWFsb2c6IGZ1bmN0aW9uIG9wZW5NYXBEaWFsb2cocXVlc3Rpb24pIHsKICAgICAgY29uc29sZS5sb2cocXVlc3Rpb24pOwogICAgICB0aGlzLmN1cnJlbnRRdWVzdGlvbiA9IHF1ZXN0aW9uOwogICAgICB0aGlzLm1hcmtlcnMgPSBbXTsKICAgICAgdGhpcy5tYXBEaWFsb2cgPSB0cnVlOwogICAgfSwKICAgIGFkZE1hcmtlcjogZnVuY3Rpb24gYWRkTWFya2VyKGV2ZW50KSB7CiAgICAgIHZhciBtYXJrZXIgPSB7CiAgICAgICAgbGF0OiBldmVudC5sYXRMbmcubGF0KCksCiAgICAgICAgbG5nOiBldmVudC5sYXRMbmcubG5nKCkKICAgICAgfTsKICAgICAgdGhpcy5tYXJrZXJzLnBvcCgpOyAvLyBPbmx5IG9uZSBtYXJrZXIgYWxsb3dlZAoKICAgICAgdGhpcy5tYXJrZXJzLnB1c2goewogICAgICAgIHBvc2l0aW9uOiBtYXJrZXIKICAgICAgfSk7CiAgICB9LAogICAgc3VibWl0RGlhbG9nOiBmdW5jdGlvbiBzdWJtaXREaWFsb2codHlwZSkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgdG9rZW4sIHVybCwgcGF5bG9hZCwgX3lpZWxkJGF4aW9zJHBvc3QsIGRhdGE7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdzdWJtaXREaWFsb2cnKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLiRhdXRoLmdldFRva2VuU2lsZW50bHkoKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgdG9rZW4gPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgdXJsID0gIiIuY29uY2F0KF90aGlzLiRBUEl1cmwsICIvYW5zd2VycyIpOwogICAgICAgICAgICAgICAgX3RoaXMuc2F2aW5nID0gdHJ1ZTsgLy8gQnVpbGQgcGF5bG9hZCBmb3Igc3Rhci9nZW8gdHlwZSBxdWVzdGlvbnMKCiAgICAgICAgICAgICAgICBwYXlsb2FkID0gewogICAgICAgICAgICAgICAgICBxdWVzdGlvbjogX3RoaXMucXVlc3Rpb24sCiAgICAgICAgICAgICAgICAgIHR5cGU6IHR5cGUKICAgICAgICAgICAgICAgIH07CgogICAgICAgICAgICAgICAgaWYgKHR5cGUgPT09ICdzdGFyJykgewogICAgICAgICAgICAgICAgICBwYXlsb2FkLnJhdGluZyA9IF90aGlzLnN0YXJSYXRpbmc7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBwYXlsb2FkLmxhdCA9IF90aGlzLm1hcmtlcnNbMF0ucG9zaXRpb24ubGF0OwogICAgICAgICAgICAgICAgICBwYXlsb2FkLmxuZyA9IF90aGlzLm1hcmtlcnNbMF0ucG9zaXRpb24ubG5nOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdQYXlsb2FkOiAnLCBwYXlsb2FkKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA5OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEyOwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnBvc3QodXJsLCBwYXlsb2FkLCB7CiAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICBBdXRob3JpemF0aW9uOiAiQmVhcmVyICIuY29uY2F0KHRva2VuKQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICAgIF95aWVsZCRheGlvcyRwb3N0ID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIGRhdGEgPSBfeWllbGQkYXhpb3MkcG9zdC5kYXRhOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1Jlc3VsdDogJywgZGF0YSk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjA7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxNzsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oOSk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvcjogJywgX2NvbnRleHQudDApOwoKICAgICAgICAgICAgICBjYXNlIDIwOgogICAgICAgICAgICAgICAgX3RoaXMuZGlhbG9nID0gZmFsc2U7CiAgICAgICAgICAgICAgICBfdGhpcy5tYXBEaWFsb2cgPSBmYWxzZTsKICAgICAgICAgICAgICAgIF90aGlzLnNhdmluZyA9IGZhbHNlOwoKICAgICAgICAgICAgICBjYXNlIDIzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1s5LCAxN11dKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Question.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <v-container class=\"pa-0 ma-0\">\r\n    <!-- Question card -->\r\n     <v-card class=\"my-2 ma-2\">\r\n      <v-card-text>\r\n        <div class=\"my-2 subtitle-1\">{{ question.question }}</div>\r\n\r\n        <!-- Readonly star rating showing aggregated score -->\r\n        <div v-if=\"question.type==='Star'\">\r\n          <v-rating :value=\"question.avgScore\" color=\"amber\" dense half-increments readonly size=\"24\"\r\n          ></v-rating> ({{ question.answers }} ratings)\r\n        </div>\r\n\r\n        <div class=\"my-4 subtitle-2\">\r\n          Posted <strong>{{ moment.unix(question.created/1000).fromNow() }}</strong>\r\n          <strong v-if=\"question.author===$store.getters.getUser.sub\"> by you</strong>\r\n        </div>\r\n      </v-card-text>\r\n  \r\n      <!-- Only show \"Answer\" button for questions asked by different user -->\r\n      <v-card-actions v-if=\"question.author!=$store.getters.getUser.sub\">\r\n\r\n        <!-- For star rating questions -->\r\n        <div v-if=\"question.type==='Star'\">\r\n          <v-btn text color=\"orange\" dark @click=\"openDialog(question)\">\r\n            Answer\r\n          </v-btn>\r\n        </div>\r\n\r\n        <!-- For geo rating questions -->\r\n        <div v-if=\"question.type==='Geo'\">\r\n          <v-btn text color=\"orange\" dark @click=\"openMapDialog(question)\">\r\n            Answer on map\r\n          </v-btn>\r\n          <v-btn :disabled=\"question.answers===0\" text color=\"orange\" dark :to=\"{ name: 'Answers', query: { hk: question.hashKey, rk: question.rangeKey }}\">\r\n            See results\r\n          </v-btn>\r\n        </div>\r\n\r\n        <!-- <v-spacer></v-spacer> -->\r\n      </v-card-actions>\r\n      <v-divider class=\"mx-4\"></v-divider> \r\n    </v-card> \r\n\r\n    <!-- Popup star rating dialog for answering question -->\r\n    <v-dialog v-model=\"dialog\" persistent max-width=\"290\">\r\n      <v-card>\r\n        <v-card-title class=\"headline\">Your rating:</v-card-title>\r\n        <v-card-text>\r\n          <!-- <div class=\"my-1 subtitle-2\">Your rating: </div> -->\r\n          <v-rating v-model=\"starRating\"\r\n            color=\"amber\"\r\n            dense\r\n            half-increments\r\n            size=\"40\"\r\n          ></v-rating>\r\n        </v-card-text>            \r\n        <v-card-actions> \r\n          <v-spacer></v-spacer>\r\n          <v-btn :disabled=\"starRating===0||saving===true\" color=\"success\" text @click=\"submitDialog('star')\">Submit</v-btn>\r\n          <v-btn :disabled=\"saving===true\" color=\"error\" text @click=\"dialog=false\">Cancel</v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-dialog>\r\n\r\n    <!-- Popup geo rating dialog for answering question -->\r\n    <v-dialog v-model=\"mapDialog\" persistent>\r\n      <v-card>\r\n        <v-card-title class=\"headline\">Drop a pin on your answer:</v-card-title>\r\n        <v-card-text>\r\n          <!-- <div class=\"my-1 subtitle-2\">Your rating: </div> -->\r\n          <GmapMap\r\n            ref=\"gmap\"\r\n            :center=\"{lat:this.position.latitude, lng:this.position.longitude}\"\r\n            :zoom=\"7\"\r\n            map-type-id=\"roadmap\"\r\n            style=\"width: 100%; height: 400px\"\r\n            \r\n            :options=\"{\r\n              zoomControl: false,\r\n              zoom: 11,\r\n              mapTypeControl: false,\r\n              scaleControl: false,\r\n              streetViewControl: false,\r\n              rotateControl: false,\r\n              fullscreenControl: false,\r\n              disableDefaultUI: false\r\n            }\"\r\n          > \r\n            <GmapMarker\r\n              :key=\"index\"\r\n              v-for=\"(m, index) in markers\"\r\n              :position=\"m.position\"\r\n              @click=\"center=m.position\"\r\n            ></GmapMarker>    \r\n            <GmapCircle\r\n              :center=\"{lat:this.currentQuestion.latitude, lng:this.currentQuestion.longitude}\"\r\n              :radius=\"8000\"\r\n              @click=\"addMarker\"\r\n              :options=\"{\r\n                fillColor:'blue',\r\n                fillOpacity:0.1,\r\n                strokeColor: '#0000FF',\r\n                strokeOpacity: 0.2,\r\n                strokeWeight: 5\r\n              }\"\r\n            />\r\n          </GmapMap>     \r\n        </v-card-text>            \r\n        <v-card-actions> \r\n          <v-spacer></v-spacer>\r\n          <v-btn :disabled=\"markers.length===0||saving===true\" color=\"success\" text @click=\"submitDialog('geo')\">Submit</v-btn>\r\n          <v-btn :disabled=\"saving===true\" color=\"error\" text @click=\"mapDialog=false\">Cancel</v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-dialog>\r\n\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\"\r\nimport { mapState } from 'vuex'\r\n\r\nexport default {\r\n  name: \"HomeView\",\r\n  props: ['question'],\r\n  data: function () {   \r\n    return {\r\n      dialog: false,\r\n      mapDialog: false,\r\n      markers: [],\r\n      starRating: 0,\r\n      saving: false,\r\n      currentQuestion: {\r\n        latitude: 40.7358235,\r\n        longitude: -73.9927102,\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      position: (state) => state.position\r\n    })\r\n  },\r\n  methods: {\r\n    openDialog(question) {\r\n      console.log(question)\r\n      this.currentQuestion = question\r\n      this.starRating = 0  // reset rating\r\n      this.dialog = true\r\n    },\r\n    openMapDialog(question) {\r\n      console.log(question)\r\n      this.currentQuestion = question\r\n      this.markers = []\r\n      this.mapDialog = true\r\n    },    \r\n    addMarker(event) {\r\n      const marker = {\r\n        lat: event.latLng.lat(),\r\n        lng: event.latLng.lng()\r\n      };\r\n      this.markers.pop() // Only one marker allowed\r\n      this.markers.push({ position: marker })\r\n    },\r\n    async submitDialog(type) {\r\n      console.log('submitDialog')\r\n\r\n      const token = await this.$auth.getTokenSilently();\r\n      const url = `${this.$APIurl}/answers`\r\n      this.saving = true\r\n\r\n      // Build payload for star/geo type questions\r\n      let payload = {\r\n        question: this.question,\r\n        type\r\n      }\r\n\r\n      if (type === 'star') {\r\n        payload.rating = this.starRating\r\n      } else {\r\n        payload.lat = this.markers[0].position.lat\r\n        payload.lng = this.markers[0].position.lng\r\n      }\r\n\r\n      console.log('Payload: ', payload)\r\n      try {\r\n        const { data } = await axios.post(url, payload,\r\n          {\r\n            headers: { \r\n              Authorization: `Bearer ${token}`\r\n            }\r\n          })\r\n        console.log('Result: ', data) \r\n      } catch (err) {\r\n        console.error('Error: ', err)\r\n      }\r\n\r\n      this.dialog = false\r\n      this.mapDialog = false\r\n      this.saving = false\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n"],"sourceRoot":"src/components"}]}