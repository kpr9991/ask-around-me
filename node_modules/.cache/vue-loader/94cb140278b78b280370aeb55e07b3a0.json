{"remainingRequest":"C:\\Users\\kprut\\Desktop\\ask-around-me\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\kprut\\Desktop\\ask-around-me\\frontend\\src\\components\\Question.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\kprut\\Desktop\\ask-around-me\\frontend\\src\\components\\Question.vue","mtime":1607093321478},{"path":"C:\\Users\\kprut\\Desktop\\ask-around-me\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\kprut\\Desktop\\ask-around-me\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\kprut\\Desktop\\ask-around-me\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\kprut\\Desktop\\ask-around-me\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\kprut\\Desktop\\ask-around-me\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiDQppbXBvcnQgeyBtYXBTdGF0ZSB9IGZyb20gJ3Z1ZXgnDQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogIkhvbWVWaWV3IiwNCiAgcHJvcHM6IFsncXVlc3Rpb24nXSwNCiAgZGF0YTogZnVuY3Rpb24gKCkgeyAgIA0KICAgIHJldHVybiB7DQogICAgICBkaWFsb2c6IGZhbHNlLA0KICAgICAgbWFwRGlhbG9nOiBmYWxzZSwNCiAgICAgIG1hcmtlcnM6IFtdLA0KICAgICAgc3RhclJhdGluZzogMCwNCiAgICAgIHNhdmluZzogZmFsc2UsDQogICAgICBjdXJyZW50UXVlc3Rpb246IHsNCiAgICAgICAgbGF0aXR1ZGU6IDQwLjczNTgyMzUsDQogICAgICAgIGxvbmdpdHVkZTogLTczLjk5MjcxMDIsDQogICAgICB9DQogICAgfQ0KICB9LA0KICBjb21wdXRlZDogew0KICAgIC4uLm1hcFN0YXRlKHsNCiAgICAgIHBvc2l0aW9uOiAoc3RhdGUpID0+IHN0YXRlLnBvc2l0aW9uDQogICAgfSkNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIG9wZW5EaWFsb2cocXVlc3Rpb24pIHsNCiAgICAgIGNvbnNvbGUubG9nKHF1ZXN0aW9uKQ0KICAgICAgdGhpcy5jdXJyZW50UXVlc3Rpb24gPSBxdWVzdGlvbg0KICAgICAgdGhpcy5zdGFyUmF0aW5nID0gMCAgLy8gcmVzZXQgcmF0aW5nDQogICAgICB0aGlzLmRpYWxvZyA9IHRydWUNCiAgICB9LA0KICAgIG9wZW5NYXBEaWFsb2cocXVlc3Rpb24pIHsNCiAgICAgIGNvbnNvbGUubG9nKHF1ZXN0aW9uKQ0KICAgICAgdGhpcy5jdXJyZW50UXVlc3Rpb24gPSBxdWVzdGlvbg0KICAgICAgdGhpcy5tYXJrZXJzID0gW10NCiAgICAgIHRoaXMubWFwRGlhbG9nID0gdHJ1ZQ0KICAgIH0sICAgIA0KICAgIGFkZE1hcmtlcihldmVudCkgew0KICAgICAgY29uc3QgbWFya2VyID0gew0KICAgICAgICBsYXQ6IGV2ZW50LmxhdExuZy5sYXQoKSwNCiAgICAgICAgbG5nOiBldmVudC5sYXRMbmcubG5nKCkNCiAgICAgIH07DQogICAgICB0aGlzLm1hcmtlcnMucG9wKCkgLy8gT25seSBvbmUgbWFya2VyIGFsbG93ZWQNCiAgICAgIHRoaXMubWFya2Vycy5wdXNoKHsgcG9zaXRpb246IG1hcmtlciB9KQ0KICAgIH0sDQogICAgYXN5bmMgc3VibWl0RGlhbG9nKHR5cGUpIHsNCiAgICAgIGNvbnNvbGUubG9nKCdzdWJtaXREaWFsb2cnKQ0KDQogICAgICBjb25zdCB0b2tlbiA9IGF3YWl0IHRoaXMuJGF1dGguZ2V0VG9rZW5TaWxlbnRseSgpOw0KICAgICAgY29uc3QgdXJsID0gYCR7dGhpcy4kQVBJdXJsfS9hbnN3ZXJzYA0KICAgICAgdGhpcy5zYXZpbmcgPSB0cnVlDQoNCiAgICAgIC8vIEJ1aWxkIHBheWxvYWQgZm9yIHN0YXIvZ2VvIHR5cGUgcXVlc3Rpb25zDQogICAgICBsZXQgcGF5bG9hZCA9IHsNCiAgICAgICAgcXVlc3Rpb246IHRoaXMucXVlc3Rpb24sDQogICAgICAgIHR5cGUNCiAgICAgIH0NCg0KICAgICAgaWYgKHR5cGUgPT09ICdzdGFyJykgew0KICAgICAgICBwYXlsb2FkLnJhdGluZyA9IHRoaXMuc3RhclJhdGluZw0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgcGF5bG9hZC5sYXQgPSB0aGlzLm1hcmtlcnNbMF0ucG9zaXRpb24ubGF0DQogICAgICAgIHBheWxvYWQubG5nID0gdGhpcy5tYXJrZXJzWzBdLnBvc2l0aW9uLmxuZw0KICAgICAgfQ0KDQogICAgICBjb25zb2xlLmxvZygnUGF5bG9hZDogJywgcGF5bG9hZCkNCiAgICAgIHRyeSB7DQogICAgICAgIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgYXhpb3MucG9zdCh1cmwsIHBheWxvYWQsDQogICAgICAgICAgew0KICAgICAgICAgICAgaGVhZGVyczogeyANCiAgICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke3Rva2VufWANCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9KQ0KICAgICAgICBjb25zb2xlLmxvZygnUmVzdWx0OiAnLCBkYXRhKSANCiAgICAgIH0gY2F0Y2ggKGVycikgew0KICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvcjogJywgZXJyKQ0KICAgICAgfQ0KDQogICAgICB0aGlzLmRpYWxvZyA9IGZhbHNlDQogICAgICB0aGlzLm1hcERpYWxvZyA9IGZhbHNlDQogICAgICB0aGlzLnNhdmluZyA9IGZhbHNlDQogICAgfQ0KICB9DQp9DQoNCg=="},{"version":3,"sources":["Question.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyHA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Question.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <v-container class=\"pa-0 ma-0\">\r\n    <!-- Question card -->\r\n     <v-card class=\"my-2 ma-2\">\r\n      <v-card-text>\r\n        <div class=\"my-2 subtitle-1\">{{ question.question }}</div>\r\n\r\n        <!-- Readonly star rating showing aggregated score -->\r\n        <div v-if=\"question.type==='Star'\">\r\n          <v-rating :value=\"question.avgScore\" color=\"amber\" dense half-increments readonly size=\"24\"\r\n          ></v-rating> ({{ question.answers }} ratings)\r\n        </div>\r\n\r\n        <div class=\"my-4 subtitle-2\">\r\n          Posted <strong>{{ moment.unix(question.created/1000).fromNow() }}</strong>\r\n          <strong v-if=\"question.author===$store.getters.getUser.sub\"> by you</strong>\r\n        </div>\r\n      </v-card-text>\r\n  \r\n      <!-- Only show \"Answer\" button for questions asked by different user -->\r\n      <v-card-actions v-if=\"question.author!=$store.getters.getUser.sub\">\r\n\r\n        <!-- For star rating questions -->\r\n        <div v-if=\"question.type==='Star'\">\r\n          <v-btn text color=\"orange\" dark @click=\"openDialog(question)\">\r\n            Answer\r\n          </v-btn>\r\n        </div>\r\n\r\n        <!-- For geo rating questions -->\r\n        <div v-if=\"question.type==='Geo'\">\r\n          <v-btn text color=\"orange\" dark @click=\"openMapDialog(question)\">\r\n            Answer on map\r\n          </v-btn>\r\n          <v-btn :disabled=\"question.answers===0\" text color=\"orange\" dark :to=\"{ name: 'Answers', query: { hk: question.hashKey, rk: question.rangeKey }}\">\r\n            See results\r\n          </v-btn>\r\n        </div>\r\n\r\n        <!-- <v-spacer></v-spacer> -->\r\n      </v-card-actions>\r\n      <v-divider class=\"mx-4\"></v-divider> \r\n    </v-card> \r\n\r\n    <!-- Popup star rating dialog for answering question -->\r\n    <v-dialog v-model=\"dialog\" persistent max-width=\"290\">\r\n      <v-card>\r\n        <v-card-title class=\"headline\">Your rating:</v-card-title>\r\n        <v-card-text>\r\n          <!-- <div class=\"my-1 subtitle-2\">Your rating: </div> -->\r\n          <v-rating v-model=\"starRating\"\r\n            color=\"amber\"\r\n            dense\r\n            half-increments\r\n            size=\"40\"\r\n          ></v-rating>\r\n        </v-card-text>            \r\n        <v-card-actions> \r\n          <v-spacer></v-spacer>\r\n          <v-btn :disabled=\"starRating===0||saving===true\" color=\"success\" text @click=\"submitDialog('star')\">Submit</v-btn>\r\n          <v-btn :disabled=\"saving===true\" color=\"error\" text @click=\"dialog=false\">Cancel</v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-dialog>\r\n\r\n    <!-- Popup geo rating dialog for answering question -->\r\n    <v-dialog v-model=\"mapDialog\" persistent>\r\n      <v-card>\r\n        <v-card-title class=\"headline\">Drop a pin on your answer:</v-card-title>\r\n        <v-card-text>\r\n          <!-- <div class=\"my-1 subtitle-2\">Your rating: </div> -->\r\n          <GmapMap\r\n            ref=\"gmap\"\r\n            :center=\"{lat:this.position.latitude, lng:this.position.longitude}\"\r\n            :zoom=\"7\"\r\n            map-type-id=\"roadmap\"\r\n            style=\"width: 100%; height: 400px\"\r\n            \r\n            :options=\"{\r\n              zoomControl: false,\r\n              zoom: 11,\r\n              mapTypeControl: false,\r\n              scaleControl: false,\r\n              streetViewControl: false,\r\n              rotateControl: false,\r\n              fullscreenControl: false,\r\n              disableDefaultUI: false\r\n            }\"\r\n          > \r\n            <GmapMarker\r\n              :key=\"index\"\r\n              v-for=\"(m, index) in markers\"\r\n              :position=\"m.position\"\r\n              @click=\"center=m.position\"\r\n            ></GmapMarker>    \r\n            <GmapCircle\r\n              :center=\"{lat:this.currentQuestion.latitude, lng:this.currentQuestion.longitude}\"\r\n              :radius=\"8000\"\r\n              @click=\"addMarker\"\r\n              :options=\"{\r\n                fillColor:'blue',\r\n                fillOpacity:0.1,\r\n                strokeColor: '#0000FF',\r\n                strokeOpacity: 0.2,\r\n                strokeWeight: 5\r\n              }\"\r\n            />\r\n          </GmapMap>     \r\n        </v-card-text>            \r\n        <v-card-actions> \r\n          <v-spacer></v-spacer>\r\n          <v-btn :disabled=\"markers.length===0||saving===true\" color=\"success\" text @click=\"submitDialog('geo')\">Submit</v-btn>\r\n          <v-btn :disabled=\"saving===true\" color=\"error\" text @click=\"mapDialog=false\">Cancel</v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-dialog>\r\n\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\"\r\nimport { mapState } from 'vuex'\r\n\r\nexport default {\r\n  name: \"HomeView\",\r\n  props: ['question'],\r\n  data: function () {   \r\n    return {\r\n      dialog: false,\r\n      mapDialog: false,\r\n      markers: [],\r\n      starRating: 0,\r\n      saving: false,\r\n      currentQuestion: {\r\n        latitude: 40.7358235,\r\n        longitude: -73.9927102,\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      position: (state) => state.position\r\n    })\r\n  },\r\n  methods: {\r\n    openDialog(question) {\r\n      console.log(question)\r\n      this.currentQuestion = question\r\n      this.starRating = 0  // reset rating\r\n      this.dialog = true\r\n    },\r\n    openMapDialog(question) {\r\n      console.log(question)\r\n      this.currentQuestion = question\r\n      this.markers = []\r\n      this.mapDialog = true\r\n    },    \r\n    addMarker(event) {\r\n      const marker = {\r\n        lat: event.latLng.lat(),\r\n        lng: event.latLng.lng()\r\n      };\r\n      this.markers.pop() // Only one marker allowed\r\n      this.markers.push({ position: marker })\r\n    },\r\n    async submitDialog(type) {\r\n      console.log('submitDialog')\r\n\r\n      const token = await this.$auth.getTokenSilently();\r\n      const url = `${this.$APIurl}/answers`\r\n      this.saving = true\r\n\r\n      // Build payload for star/geo type questions\r\n      let payload = {\r\n        question: this.question,\r\n        type\r\n      }\r\n\r\n      if (type === 'star') {\r\n        payload.rating = this.starRating\r\n      } else {\r\n        payload.lat = this.markers[0].position.lat\r\n        payload.lng = this.markers[0].position.lng\r\n      }\r\n\r\n      console.log('Payload: ', payload)\r\n      try {\r\n        const { data } = await axios.post(url, payload,\r\n          {\r\n            headers: { \r\n              Authorization: `Bearer ${token}`\r\n            }\r\n          })\r\n        console.log('Result: ', data) \r\n      } catch (err) {\r\n        console.error('Error: ', err)\r\n      }\r\n\r\n      this.dialog = false\r\n      this.mapDialog = false\r\n      this.saving = false\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n"]}]}