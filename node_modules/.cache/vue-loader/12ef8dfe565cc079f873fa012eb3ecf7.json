{"remainingRequest":"C:\\Users\\kprut\\Desktop\\ask-around-me\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\kprut\\Desktop\\ask-around-me\\frontend\\src\\views\\HomeView.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\kprut\\Desktop\\ask-around-me\\frontend\\src\\views\\HomeView.vue","mtime":1607093321484},{"path":"C:\\Users\\kprut\\Desktop\\ask-around-me\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\kprut\\Desktop\\ask-around-me\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\kprut\\Desktop\\ask-around-me\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\kprut\\Desktop\\ask-around-me\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\kprut\\Desktop\\ask-around-me\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyIKaW1wb3J0IHsgbWFwU3RhdGUgfSBmcm9tICd2dWV4JwppbXBvcnQgeyBidXMgfSBmcm9tICcuLi9tYWluJwppbXBvcnQgUXVlc3Rpb24gZnJvbSAnQC9jb21wb25lbnRzL1F1ZXN0aW9uLnZ1ZScKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiSG9tZVZpZXciLAogIGNvbXBvbmVudHM6IHsKICAgIFF1ZXN0aW9uCiAgfSwKICBkYXRhOiBmdW5jdGlvbiAoKSB7ICAgCiAgICByZXR1cm4gewogICAgICBjdXJyZW50TGF0OiA0MC43MzU4MjM1LAogICAgICBjdXJyZW50TG5nOiAtNzMuOTkyNzEwMiwKICAgICAgbG9hZGluZzogdHJ1ZSwKICAgICAgdXNlcjogbnVsbAogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcFN0YXRlKFsncXVlc3Rpb25zJ10pCiAgfSwKICBtb3VudGVkICgpIHsKICAgIGNvbnNvbGUubG9nKCdtb3VudGVkJykKICAgIG5hdmlnYXRvci5nZW9sb2NhdGlvbi5nZXRDdXJyZW50UG9zaXRpb24oKHBvc2l0aW9uKSA9PiB7CiAgICAgIGNvbnNvbGUubG9nKCdQb3NpdGlvbiByZXR1cm5lZDogJywgcG9zaXRpb24pCiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnc2V0UG9zaXRpb24nLCBwb3NpdGlvbikKICAgICAgdGhpcy5jdXJyZW50TGF0ID0gcG9zaXRpb24uY29vcmRzLmxhdGl0dWRlCiAgICAgIHRoaXMuY3VycmVudExuZyA9IHBvc2l0aW9uLmNvb3Jkcy5sb25naXR1ZGUKICAgICAgdGhpcy51cGRhdGVSZXN1bHRzKCkKICAgIH0sICgpID0+IHsKICAgICAgY29uc29sZS5sb2coJ0Vycm9yOiBUaGUgR2VvbG9jYXRpb24gc2VydmljZSBmYWlsZWQuJykKICAgIH0sIHsKICAgICAgZW5hYmxlSGlnaEFjY3VyYWN5OiB0cnVlLAogICAgICB0aW1lb3V0OiAzMDAwMAogICAgfSkKICB9LAogIGNyZWF0ZWQgKCkgewogICAgYnVzLiRvbignYXV0aGVudGljYXRlZCcsIGFzeW5jICh1c2VyKSA9PiB7CiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnc2V0VXNlcicsIHVzZXIpCiAgICAgIGNvbnNvbGUubG9nKCdVc2VyIHNpZ25lZCBpbjogJywgdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXRVc2VyKQoKICAgIH0pCiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyB1cGRhdGVSZXN1bHRzKCkgewogICAgICBpZiAoIXRoaXMuJHN0b3JlLmdldHRlcnMuaXNJbml0aWFsaXplZCkgcmV0dXJuCiAgICAgIGNvbnN0IHRva2VuID0gYXdhaXQgdGhpcy4kYXV0aC5nZXRUb2tlblNpbGVudGx5KCkKCiAgICAgIC8vIE9ubHkgdXNlIHRoaXMgbGluZSBmb3IgZGVidWdnaW5nISBJdCBkaXNwbGF5cyB0aGUgSldUIHRva2VuIGluIHRoZSBicm93c2VyIGNvbnNvbGUuCiAgICAgIC8vIGNvbnNvbGUubG9nKHRva2VuKQogICAgICBjb25zdCB1cmwgPSBgJHt0aGlzLiRBUEl1cmx9L3F1ZXN0aW9ucz9sYXQ9JHt0aGlzLmN1cnJlbnRMYXR9JmxuZz0ke3RoaXMuY3VycmVudExuZ31gCiAgICAgIGNvbnNvbGUubG9nKCdVUkw6ICcsIHVybCkKICAgICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCBheGlvcy5nZXQodXJsLCB7CiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke3Rva2VufWAgICAgLy8gc2VuZCB0aGUgYWNjZXNzIHRva2VuIHRocm91Z2ggdGhlICdBdXRob3JpemF0aW9uJyBoZWFkZXIKICAgICAgICB9CiAgICAgIH0pCiAgICAgIGNvbnNvbGUubG9nKCdSZXNwb25zZTogJywgZGF0YSkKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdzZXRBbGxRdWVzdGlvbnMnLCBkYXRhKQogICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZQogICAgfQogIH0KfQo="},{"version":3,"sources":["HomeView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyHA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HomeView.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <v-container class=\"pa-0 ma-0\">\r\n\r\n    <!-- Intro screen for unauthenticated users -->\r\n    <div id=\"unauth-view\" v-if=\"!$auth.isAuthenticated\">\r\n      <v-card class=\"ma-2\">\r\n        <v-list-item>\r\n          <v-list-item-avatar color=\"grey\"></v-list-item-avatar>\r\n          <v-list-item-content>\r\n            <v-list-item-title class=\"headline\">Welcome!</v-list-item-title>\r\n            <v-list-item-subtitle>Share local knowledge</v-list-item-subtitle>\r\n          </v-list-item-content>\r\n        </v-list-item>\r\n    \r\n        <v-img\r\n          src=\"@/assets/overview.jpg\"\r\n          height=\"194\"\r\n        ></v-img>\r\n    \r\n        <v-card-text>\r\n          Who serves the best coffee? Where's the best local park? Get the answers to these questions and more from a local audience!\r\n        </v-card-text>\r\n    \r\n        <v-card-actions>\r\n          <v-btn text color=\"orange\" href=\"https://bit.ly/askaroundme\"  target=\"_blank\">\r\n            Learn more\r\n          </v-btn>\r\n          <v-btn text color=\"orange\" href=\"https://github.com/aws-samples/ask-around-me/\"  target=\"_blank\">\r\n            GitHub\r\n          </v-btn>\r\n          <v-spacer></v-spacer>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </div>\r\n\r\n    <!-- Questions list for authenticated users -->\r\n    <v-container class=\"pa-0 ma-0\" id=\"auth-view\" v-if=\"$auth.isAuthenticated\">\r\n      <GmapMap\r\n        :center=\"{lat:this.currentLat, lng:this.currentLng}\"\r\n        :zoom=\"7\"\r\n        map-type-id=\"roadmap\"\r\n        style=\"width: 100%; height: 300px\"\r\n        :options=\"{\r\n          zoomControl: true,\r\n          zoom: 11,\r\n          mapTypeControl: false,\r\n          scaleControl: false,\r\n          streetViewControl: false,\r\n          rotateControl: false,\r\n          fullscreenControl: false,\r\n          disableDefaultUI: false\r\n        }\"\r\n      > \r\n        <GmapMarker\r\n          :key=\"index\"\r\n          v-for=\"(m, index) in questions\"\r\n          :position=\"{lat: m.latitude, lng: m.longitude}\"\r\n          :clickable=\"false\"\r\n          :draggable=\"false\"\r\n          @click=\"center=m.position\"\r\n        />\r\n        <GmapCircle\r\n          :center=\"{lat: currentLat, lng: currentLng}\"\r\n          :radius=\"8000\"\r\n          :options=\"{\r\n            fillColor:'blue',\r\n            fillOpacity:0.1,\r\n            strokeColor: '#0000FF',\r\n            strokeOpacity: 0.2,\r\n            strokeWeight: 5\r\n          }\"\r\n        />\r\n      </GmapMap>     \r\n    </v-container>\r\n\r\n    <!-- Loading spinner -->\r\n    <v-container v-if=\"$auth.isAuthenticated && loading\" >\r\n      <div class=\"text-center\">\r\n        <v-progress-circular\r\n          :size=\"50\"\r\n          color=\"orange\"\r\n          indeterminate\r\n        ></v-progress-circular>        \r\n      </div>  \r\n    </v-container>\r\n\r\n    <!-- No questions - prompt user to ask one -->\r\n    <v-container v-if=\"questions.length === 0 && !loading\" >\r\n      <v-card class=\"ma-2\">\r\n        <v-card-title class=\"headline\">No questions here</v-card-title>\r\n        <v-card-subtitle>Whoa! This is a quiet neighborhood. Be the first to ask a question.</v-card-subtitle>\r\n        <v-card-actions>\r\n          <v-btn color=\"orange\" text>Ask question</v-btn>\r\n        </v-card-actions>\r\n      </v-card>    \r\n    </v-container>\r\n    <v-container class=\"pa-0 ma-0\" v-if=\"questions.length > 0\">\r\n      <v-container class=\"pa-0 ma-0\" v-bind:key=\"index\" v-for=\"(question, index) in questions\">\r\n        <Question v-bind:question=\"question\"/>\r\n      </v-container>\r\n    </v-container>\r\n\r\n    <!-- Add question icon -->\r\n    <v-container class=\"pa-0 ma-0\">\r\n      <v-btn \r\n        v-if=\"$auth.isAuthenticated\" \r\n        fixed\r\n        dark\r\n        fab\r\n        bottom\r\n        right\r\n        color=\"red\"\r\n        class=\"mb-4\"\r\n        to=\"/ask\">\r\n        <v-icon>add</v-icon>\r\n      </v-btn>\r\n    </v-container>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\n  import axios from \"axios\"\r\n  import { mapState } from 'vuex'\r\n  import { bus } from '../main'\r\n  import Question from '@/components/Question.vue'\r\n\r\n  export default {\r\n    name: \"HomeView\",\r\n    components: {\r\n      Question\r\n    },\r\n    data: function () {   \r\n      return {\r\n        currentLat: 40.7358235,\r\n        currentLng: -73.9927102,\r\n        loading: true,\r\n        user: null\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapState(['questions'])\r\n    },\r\n    mounted () {\r\n      console.log('mounted')\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        console.log('Position returned: ', position)\r\n        this.$store.commit('setPosition', position)\r\n        this.currentLat = position.coords.latitude\r\n        this.currentLng = position.coords.longitude\r\n        this.updateResults()\r\n      }, () => {\r\n        console.log('Error: The Geolocation service failed.')\r\n      }, {\r\n        enableHighAccuracy: true,\r\n        timeout: 30000\r\n      })\r\n    },\r\n    created () {\r\n      bus.$on('authenticated', async (user) => {\r\n        this.$store.commit('setUser', user)\r\n        console.log('User signed in: ', this.$store.getters.getUser)\r\n\r\n      })\r\n    },\r\n    methods: {\r\n      async updateResults() {\r\n        if (!this.$store.getters.isInitialized) return\r\n        const token = await this.$auth.getTokenSilently()\r\n\r\n        // Only use this line for debugging! It displays the JWT token in the browser console.\r\n        // console.log(token)\r\n        const url = `${this.$APIurl}/questions?lat=${this.currentLat}&lng=${this.currentLng}`\r\n        console.log('URL: ', url)\r\n        const { data } = await axios.get(url, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`    // send the access token through the 'Authorization' header\r\n          }\r\n        })\r\n        console.log('Response: ', data)\r\n        this.$store.commit('setAllQuestions', data)\r\n        this.loading = false\r\n      }\r\n    }\r\n  }\r\n</script>\r\n"]}]}